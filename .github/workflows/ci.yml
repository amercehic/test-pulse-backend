name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: "postgresql://test_user:test_password@localhost:5432/test_db"

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      # Install dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for database..."
            sleep 2
          done
          echo "Database is ready."

      # Generate Prisma Client
      - name: Generate Prisma Client
        run: yarn prisma generate

      # Run Prisma Migrations
      - name: Run Prisma Migrations
        run: yarn prisma migrate deploy

      # Seed the Database
      - name: Seed Database
        run: yarn seed

      # Run Linter
      - name: Run Linter
        run: yarn lint

      # Run Unit Tests
      - name: Run Unit Tests
        run: yarn test:unit

      # Run E2E Tests with additional environment variables
      - name: Run E2E Tests
        env:
          DO_SPACES_ENDPOINT: ${{ secrets.DO_SPACES_ENDPOINT }}
          DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
          DO_SPACES_SECRET: ${{ secrets.DO_SPACES_SECRET }}
          DO_SPACES_BUCKET: ${{ secrets.DO_SPACES_BUCKET }}
          DO_SPACES_CDN: ${{ secrets.DO_SPACES_CDN }}
          DO_SPACES_REGION: ${{ secrets.DO_SPACES_REGION }}
        run: yarn test:e2e

      # Build the Application
      - name: Build Application
        run: yarn build
